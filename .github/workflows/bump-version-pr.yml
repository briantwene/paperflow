name: Bump Version PR

on:
    push:
        branches:
            - "main"

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
    create-release:
        runs-on: ubuntu-20.04
        outputs:
          latest_release_id: ${{ steps.get_latest_release_id.outputs.result }}
        steps:
            - uses: actions/checkout@v3

            - name: Node setup
              uses: actions/setup-node@v3 
              with:
                node-version-file: ".nvmrc"
                cache: "npm"
            
            - run: yarn install --frozen-lockfile

            - name: Create Release Pull Request or Publish
              id: changesets
              uses: changesets/action@v1
              with:
                # this should create the github tags hopefully
                publish: yarn changeset tag
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    

            - name: Get Latest Release id
              id: get_latest_release_id
              uses: actions/github-script@v6
              with:
                script: |
                  const { data } = await github.rest.repos.getLatestRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo
                  })
    
                  return data.id
    
            - name: Set latest release to draft
              uses: actions/github-script@v6
              env:
                release_id: ${{ steps.get_latest_release_id.outputs.result }}
              with:
                script: |
                  github.rest.repos.updateRelease({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    release_id: process.env.release_id,
                    draft: true,
                    prerelease: false
                  })
              
    build-app-and-attach-to-release:
      name: Build app & add to release
      needs: create-release
      permissions:
        contents: write
      strategy:
        fail-fast: false
        matrix:
          platform: [macos-latest, ubuntu-latest, windows-latest]

      runs-on: ${{ matrix.platform }}
      steps:
        - uses: actions/checkout@v3
          with:
            ref: main
            fetch-depth: 0
  
        - name: Node setup
          uses: actions/setup-node@v3 
          with:
            node-version-file: ".nvmrc"
            cache: "npm"
  
  
        - name: Install Rust stable
          run:
            curl https://sh.rustup.rs -sSf | sh -s -- -y
  
        - name: Install dependencies (ubuntu only)
          if: matrix.platform == 'ubuntu-latest'
          run: |
            sudo apt-get update &&
            sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
  
        - name: Install app dependencies and build it
          env:
            TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
            TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          run: yarn install
  
        - uses: tauri-apps/tauri-action@v0
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
            TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          with:
            releaseId: ${{ needs.create-release.outputs.latest_release_id }}

        - name: Publish latest release
          uses: actions/github-script@v6
          env:
            release_id: ${{ needs.create-release.outputs.latest_release_id }}
          with:
            script: |
              github.rest.repos.updateRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: process.env.release_id,
                draft: false,
                prerelease: false
              })